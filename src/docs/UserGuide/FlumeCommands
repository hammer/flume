=== Flume Commands

So far we have been modifying the global state Flume using a custom
(but primitive) web interface with the Flume Configuration web page.
There are several other kind sof state modifications that can be
applied.


There are two ways to do this -- 

* the Flume Command web form
* the Flume Command Line shell.

As you can image, the commands that can be sent are essentially the
same.  We will initially talk

==== Using the Flume cmmand web inerrface

==== Using the Flume command shell

An alternate way that can be simpler for advanced users is to use the
command line shell interface.

Each of the masters have an admin port open for recieving commands.


.Flume Commands

----
hostname:~/flume$ bin/flume shell
[flume (disconnected)] connect localhost:35871
Connecting to Flume master localhost:35871...
[flume localhost:35871]
----

----
hostname:~/flume$ bin/flume shell localhost:35871
Connecting to Flume master localhost:35871...
[flume localhost:35871] 
----

You can hit TAB any time for some hints on available commands.  If you
start typin a command you can use TAB to complete command.

+help+ :: List the commands available in the shell.

+connect _master_:_port_+ :: connect to a master at machine _master_
on port _port_.

+config+ _logicalnode_ _source_ _sink_ :: configure a single logical
node _logicalnode_ with source _source_ and sink _sink_.  _source_ and
_sink_ will likely need quotes to support some of the flume
configuration syntax.

+nodestatus+ :: Output the status of the nodes the master knows about.
Nodes are in either HELLO, CONFIGURING, ACTIVE, IDLE, or ERROR states.

+getconfigs+ :: This gets and dumps the configuration specificaions of
all the logical nodes the master knows about.

+exec+ :: Executes a command on the master.  See next section for mor edetails.

+quit+ :: Exit the shell.

.Exec commands

These commands are issued and run as if run from the master.  In the
command shell they have the form:

+exec _command_ [_arg1 [_arg2_ [ ... ] ] ]+


These command can also be run from
http://master:35871/mastercommand.jsp.  The _command_ correspond to
the command field and the arguments correspond to all of the args.

Complex arguments like those with spaces, or non alpha-numeric
characters can be expressed by using ""s and ''s.  If enclosed in
"double quotes", the bodies of the strings are Java string unescaped.
If they are enclosed in 'single quotes', arbitrary charactres can be
included except for the ' character.


+noop+ :: This command contacts the master and issue a noop (no
operation) command.

+config _logicalnode_ 'source' 'sink'+ :: This command configures
a node.  This nearly identical to the 'config' command.

+multiconfig '_flumespec_'+ :: This command configures a set of
nodes on the master using the aggregated format.

+unconfig _logicalnode_+ :: This command changes the
configuration of a particular node to have a +null+ source and a
+null+ state.
 
+refresh _logicalnode_+ :: This command refreshes the current
configuration of a logical node.  This forces the logicalnode to stop
and then restart.  This also causes a master re-evaluation that may
change the failover lists.

+refreshAll _logicalnode_+ :: This atomically issues a refresh
command to all of the logical nodes.

+save '_filename_'+ :: This saves the current configuration to
the master's disk.

+load '_filename_'+ :: This loads augments the current
configuration with the logical node specifications found in
+_filename_+.

+spawn _physicalnode_ _logicalnode_+:: This creates a new logical
node _logicalnode_ on physical node +_physicalnode_+.  The node starts
with a +null+ source and a +null+ sink, and updates its configuration
specified at the master when it begins heartbeating.  Thus if a
logical node configuration already exists and a new node is spawned,
it will pickup the configuration for the logical node.

+unmap _physicalnode_ _logicalnode_+ :: This command breaks the
assignment of a _logicalnode_ from machine _physicalnode_.  A logical
node can be reassigned to another physical node using the +spawn+
command.

+decommission _logicalnode_+ :: This removes a logical node from
the logical node configuration table, and unmaps it from any physical
nodes it may be installed on.


